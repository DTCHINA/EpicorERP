/* set the Quote salesQty to a rounded up whole number*/
//loop through the order DTL row
foreach (var ttQuoteDtl_iterator in (from ttQuoteDtl_Row in ttQuoteDtl
//Check if the row is marked as added  (A) or updated (U) and select the row if it is
where string.Compare(ttQuoteDtl_Row.RowMod, ""A"", true) == 0 || string.Compare(ttQuoteDtl_Row.RowMod, ""U"", true) == 0
select ttQuoteDtl_Row))
{
//Set variable
var ttQuoteDtl_xRow = ttQuoteDtl_iterator;
//set the BPM data field to a rounded up value (next whole number)
callContextBpmData.Number01 = (int)Math.Ceiling(ttQuoteDtl_xRow.SellingExpectedQty);
//If the Number01 not equal to the selling Qty run..
if (callContextBpmData.Number01 != ttQuoteDtl_xRow.SellingExpectedQty)
{
//Set the temp table values to the BPM value
ttQuoteDtl_xRow.SellingExpectedQty = callContextBpmData.Number01;
//Display a confirmation message
this.PublishInfoMessage(""Invalid Quantity, The Quantity has been rounded up to the nearest whole number which is : "" + callContextBpmData.Number01.ToString(), Ice.Common.BusinessObjectMessageType.Information, Ice.Bpm.InfoMessageDisplayMode.Individual, ""Quote"", ""Update"");
}

}
